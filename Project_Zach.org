#+STARTUP: indent
#+SEQ_TODO: TODO STARTED WAITING DONE
* Ruby on Rails Web Development SPecialization
** Course1.An Introduction
*** Git
|        | concept               | detail                                                                                             |
|--------+-----------------------+----------------------------------------------------------------------------------------------------|
| VCS    | VCS                   | Version Control System, keeping track of changes made to files, known as SCM                       |
|        | Centralized VCS       | Reop resides on some central server, Client only has one version of trunk or branch                |
|        | Distributed VCS       | full reop resides locally, contains full history, server not involved, push and pull between repos |
|        | Back ups              | trivial and readily available                                                                      |
|--------+-----------------------+----------------------------------------------------------------------------------------------------|
| Basics | define                | lets you snapshot changes to your code                                                             |
|        | .git                  | only one .git directory at the top level                                                           |
|        | create, clone         | empty create, existing clone repo                                                                  |
|        | Add                   | Add changes to staging area                                                                        |
|        | staging area          | ready for commit                                                                                   |
|        | Commit                | Commit changes(from staging area to local repo)                                                    |
|        | Push                  | Push changes from local to remote repo                                                             |
|--------+-----------------------+----------------------------------------------------------------------------------------------------|
| Repo   | globally              | $git config --- global user.name "xxxxx"                                                           |
|        | globally              | $git config --- global user.email xxx@xxx.com                                                      |
|        | verify                | $git config <option>                                                                               |
|        | help                  | $git help <command>                                                                                |
|        | Initializing          | cd working_dir ; git init ; (possibly create a .gitignore file) ;                                  |
|        | Initializing          | git add .(.Adds the entire current directory with subdirectories)                                  |
|        | Initializing          | git commit -m "Initial commit"                                                                     |
|        | Cloning               | git clone https://repourl.git                                                                      |
|        | Cloning               | Many transfer protocols available, such as https:   ,   git:                                       |
|        | git status            | Provides the current status of your repo                                                           |
|        | git add<file/dir>     | Add untracked files to be tracked or add a modified tracked file to the staging area               |
|        | git diff              | shows the difference between staging and working directory                                         |
|        | git diff --staged     | shows the changes between HEAD(latest commit on current branch) and staging directory              |
|        | git diff HEAD         | shows the deltas between HEAD and working dir                                                      |
|        | git commit            | commits your changes to the repo                                                                   |
|        | git commit -m         | use the -m(message) option                                                                         |
|        | -a -m or -am          | skip the staging area using -a flag, after initially adding the file                               |
|        | git checkout          | re-checkout all tracked files overwrriting local changes                                           |
|        | git checkout --<file> | Re-checkout just one specific file                                                                 |
|        | git revert HEAD       | Reverts the most recent commit, after committing                                                   |
|--------+-----------------------+----------------------------------------------------------------------------------------------------|
| GitHub | Remote Repos set up   | git remote add alias remote_url                                                                    |
|        | origin                | default alias for a cloned repo                                                                    |
|        | Remote Repos Push     | git push alias branch_name    Push changes to your branch out                                      |
*** Ruby basic knowledge
|              | concept                  | detail                                                                                             |
|--------------+--------------------------+----------------------------------------------------------------------------------------------------|
| Basics       | indentation              | 2 space indentation is encouraged                                                                  |
|              | comments                 | use #, however, use comments in moderation                                                         |
|              | puts                     | put strings to console----similar to System.out.println()                                          |
|              | p                        | prints out internal representation of an object                                                    |
|              | Variables                | Lowercase or snake_case                                                                            |
|              | Constants                | ALL_CAPS or FirstCap                                                                               |
|              | Classes(and Modules)     | CamelCase                                                                                          |
|              | Semicolons :             | cram several statements, usually highly discouraged                                                |
|              | IRB                      | interactive ruby                                                                                   |
|--------------+--------------------------+----------------------------------------------------------------------------------------------------|
| Control Flow | if, unless, elsif, else  | No parentheses or curly braces, use end to close flow control block                                |
|              | while, until             | until, oppsite of while                                                                            |
|              | case                     | similar to a serial of "if", specify a target next to case, each when clause is compared to target |
|              | for                      | hard to used, each/times perferred                                                                 |
|              | modifier form            | on the same line as the statement                                                                  |
|              | True/Falue               | false and nil objects are false                                                                    |
|              | '==='                    | delegates to a double equals, super set of a double equals                                         |
|--------------+--------------------------+----------------------------------------------------------------------------------------------------|
| function     | Parentheses              | optional both when defining and calling a method                                                   |
|              | return                   | return whatever, return keyword is optional(last executed line returned)                           |
|              | parameters               | no need to declare parameters type                                                                 |
|              | predicate method ?       | method names end with '?'                                                                          |
|              | default arguments        | if a value is passed in, use that value, otherwise use the default value                           |
|              | Splat                    | prefixes parameter inside method definition                                                        |
|--------------+--------------------------+----------------------------------------------------------------------------------------------------|
| Blocks       | Chucks of code           | enclosed between {}, or the keywords do and end, often used as Iterables                           |
|              | last "parameter"         | passed to methods as last parameters                                                               |
|              | { }                      | when block content is a single line                                                                |
|              | do and end               | when block content spans multiple lines                                                            |
|              | II                       | parameters between two II, used for loop                                                           |
|              | Implicit                 | use block_given? to see if blcok was passed in, use yield to "call" the block                     |
|              | Explicit                 | Use & in front of the last "parameters", use call method to call the block                         |
|--------------+--------------------------+----------------------------------------------------------------------------------------------------|
| Files        | File.foreach('xxx.txt')  | reach files (parameter defines in the following blocks)                                            |
|              | Handling Exceptions      | rescue Exception => e, puts e.message                                                              |
|              | Alternative to Exception | if File.exist? 'xxx.txt'                                                                           |
|              | File.open("xxx.txt","w") | write info to file("xxx.txt")                                                                      |
|              | Environment Variables    | puts ENV["EDITOR"]                                                                                 |
|              | closed                   | automatically closed at the end of the block                                                       |
*** Ruby classic method
|         | function                  | detail                                                                            |
|---------+---------------------------+-----------------------------------------------------------------------------------|
| String  | single-quote' '           | allow escaping of ' with \, show(almost) everthing                                |
|         | double-quote" "           | interpret special characters(\n,\t), Allow string interpolation                   |
|         | !                         | String methods ends with ! modify the existing string                             |
|         | %Q{long multiline string} |                                                                                   |
|         | .rstrip                   | remove trailing whitespace from str                                               |
|         | .split('c')               | split words by 'c'                                                                |
|         | .chomp                    | chops off newline character                                                       |
|         | .index('xxx')             | return index of xxx in String                                                     |
|         | [index] =                 | Set(method)                                                                       |
|         | .sub 'abc', 'xyz'         | substitute 'abc' with 'xyz'                                                       |
|         | #{}                       | embed variables inside a string                                                   |
| Symbols | symbols :foo              | highly optimized string, "stands for something" string type, unique and immutable |
|         | to_s                      | convert to a String                                                               |
|         | to_sym                    | convert String to Symbol                                                          |
|         | API                       | [[http://ruby-doc.org/core-2.2.0/String.html][String API]]                                                                        |
|---------+---------------------------+-----------------------------------------------------------------------------------|
| Arrays  | [index]                   | return element locating index                                                     |
|         | [index, range]            | return new arrays beginning wth element(given index) with given range             |
|         | %w {str1 str2}            | string array creation                                                             |
|         | .join('x')                | join elements in Arrays with x(any character)                                     |
|         | .push or <<               | append element                                                                    |
|         | .pop or shift             | remove element                                                                    |
|         | [index] =                 | Set (method)                                                                      |
|         | sample(size)              | randomly pull elements(size) out                                                  |
|         | sort!                     | modify the array in place by sort                                                 |
|         | reverse!                  | modify the array in place by reverse                                              |
|         | .each                     | loop through array                                                                |
|         | .select                   | filter array by selecting                                                         |
|         | .reject                   | filter array by rejecting                                                         |
|         | .map                      | modify each element in the array                                                  |
|         | API                       | [[http://ruby-doc.org/core-2.2.0/Array.html][Array API]]                                                                         |
|---------+---------------------------+-----------------------------------------------------------------------------------|
| Ranges  | defination                | express natural consecutive sequences                                             |
|         | popular conditon          | used for conditions and intervals                                                 |
|         | dots rules                | More dots, Less have at the end. ex. Two dots---all inclusive                     |
|         | to_a                      | converted to an array                                                             |
|         | API                       | [[http://ruby-doc.org/core-2.2.0/Range.html][Range API]]                                                                         |
|---------+---------------------------+-----------------------------------------------------------------------------------|
| Hashes  | indexed collections       | of object references, created with { } or Hash.new                                |
|         | [key]                     | Accessed to the value matched to this key                                         |
|         | "=>"                      | Values set, (creation)                                                            |
|         | Hash.new(0)               | default value(0, am example) return, when accessing sth does not exists           |
|         | Hashes API                | [[http://ruby-doc.org/core-2.2.0/Hash.html][Hashes API]]                                                                        |
|         | symbols as key            | symbol: syntax                                                                    |
|         | { } are optional          | if Hash is the last argument                                                      |

*** Object Oriented Programming in Ruby
|                | concept                 | detail                                                                             |
|----------------+-------------------------+------------------------------------------------------------------------------------|
| Classes        | defination              | things(blueprints), containers of methods, close with "end"                        |
|                | Objects                 | instances of those things                                                          |
|                | Object.new              | constructor of Object, create new variable of such class                           |
|                | instance variables      | (state) are like properties, contained inside Objects                              |
|                | instance variables      | begin with @, Not declared, available to all instance methods                      |
|                | initialized             | Object's state, initialized inside the initialized method, "constructor"           |
|                | Accessing               | Instance variables are private, not be accessed from outside class                 |
|                | Accessing               | public access by default, "getter"/"setter" methods to access ins_var              |
|                | attr_accessor           | getter and setter                                                                  |
|                | attr_reader             | getter only                                                                        |
|                | attr_writer             | setter only                                                                        |
|                | self                    | inside instance method, self refers to object itself                               |
|                | self                    | outside instance method definition, self refers to the class inself                |
|                | self                    | can be used to call other methods of the same instance                             |
|----------------+-------------------------+------------------------------------------------------------------------------------|
| Inheritance    | ll operator             | evaluates the left side, if ture--returns it, else--returns the right side         |
|                | Class variable begin @@ | class << self, def methodx; @@ methodx ....;  end                                  |
|                | <                       | Denotes inheritance                                                                |
|----------------+-------------------------+------------------------------------------------------------------------------------|
| Modules        | definition              | Container for classes, methods and constants or other modules                      |
|                | definition              | like a class, but not be instantiated. Class inherits from Module and adds new     |
|                | Namespace               | the use of :: operator                                                             |
|                | Contact                 | Contract--define what a class "could" do, interfaces in OO                         |
|                | Mix-in                  | share(mix-in) ready code among multiple classes                                    |
|                | Enumberable Module      | Provide an implementation for each method                                          |
|                | require_relative        | allows importing other.rb files!!!                                                 |
|----------------+-------------------------+------------------------------------------------------------------------------------|
| Scope          | Variables               | methods and classes begin new scope for variables                                  |
|                | Variables               | Outer scope variables not carried over inner scope                                 |
|                | local_variables         | method to see which variables are in the current scope                             |
|                | Constants               | any reference begin with uppercase, including classes and modules                  |
|                | Constants               | Constants scope rules are different with variable scope rules                      |
|                | Constants               | inner scope can see constants defined in outer scope, can override outer constants |
|                | Constants               | Value remains unchanged outside                                                    |
|                | Block                   | inherit outer scope, block is a closure                                            |
|                | Block                   | variable created inside the block only available to the block                      |
|                | Block                   | Paramether to the block are always local to the block                              |
|                | Block                   | can explicitly declare block-local variables after ; in the block parameter list   |
|----------------+-------------------------+------------------------------------------------------------------------------------|
| Access Control | Encapsulation           | hide internal representation of the object, so you can change it later             |
|                | way--1                  | specify public, protected or private                                               |
|                | way--1                  | everything will at that control level, until next access control keyward           |
|                | way--2                  | define the methods and specify public,private, protected                           |
|                | way--2                  | list the comma-separated methods under those levels using method symbols           |
|                | public                  | no access control is enforced                                                      |
|                | protected               | invoked by the objects of the defining class or its subclasses                     |
|                | private                 | cannot be invoked with an explicit receiver                                        |
|                | private                 | exception, when you're trying to set a variable value(setter method)               |
*** Ruby on Rails
|                 |                                                                                                                 |                            |
|-----------------+-----------------------------------------------------------------------------------------------------------------+----------------------------|
| Rails           | (Convention Over Configuration)Less Code to write,Learn it once                                                 | COC                        |
|                 | No need to dal with low-level DB details, no more SQL                                                           | Database Abstraction Layer |
|                 | Object-Relational Mapping: Mapping your database to your Ruby Classes                                           | ORM                        |
|                 | Agile-friendly, DRY principle, CrossPlatfrom, OpernSource, Rapid prototyping                                    | advantage                  |
|                 | Modular: swap out different(interchangeable) components                                                         | advantage                  |
|                 | well-established sw pattern, think less and do more                                                             | MVC: Model View Controller |
|                 | represents the data the application is working with                                                             | MVC--Model                 |
|                 | representation of that data                                                                                     | MVC--View                  |
|                 | orchestrates interaction between the model and the view                                                         | MVC--Controller            |
|-----------------+-----------------------------------------------------------------------------------------------------------------+----------------------------|
| creat and run   | rails new name_application (rails new -h for more options)                                                      | Creating app               |
|                 | gems manager, solve different version of components conflict                                                    | Bundle                     |
|                 | cd my_first_app; git init; git add .; git commit -m "Initial commit"                                            | Version Control            |
|                 | Git repo should be INSIDE my_first_app                                                                          | Version Control            |
|                 | no need to restart the server, when doing changes                                                               | web server                 |
|                 | built-in web server, run rails server(or rails s)                                                               | web server                 |
|                 | deafault is 3000, open on brower, Useful Resources(page right)                                                  | localhost:3000             |
| Directory(CoC)  | this directory has the controller, the views, the models, helper                                                | app                        |
|                 | this directory has configuration files, such as username, password                                              | config                     |
|                 | this directory has migration scripts, SQI database stored in db directory                                       | DB                         |
|                 | this directory has the static files, such as static web page                                                    | public                     |
|                 | the files used by Bundler, specify the dependencies and interaction                                             | Gemfile, Gemfile.lock      |
|                 | Server looks into public directory before looking anywhere else                                                 | public/hello_static.html   |
|-----------------+-----------------------------------------------------------------------------------------------------------------+----------------------------|
| dynamic content | contain actions(Ruby methods) and orchestrate web requests                                                      | Controller                 |
|                 | quickly generate controller, 0 or more actions with associated views                                            | Controller                 |
|                 | rails generate(g) controller controller_name[action1 action2]                                                   | Controller                 |
|                 | templating library, lets you embed Ruby into your HTML                                                          | ERB                        |
|                 | tag patterns, evaluate Ruby code                                                                                | <%...ruby code...%>        |
|                 | tag patterns, output evaluated Ruby code                                                                        | <%= ...ruby code...%>      |
|-----------------+-----------------------------------------------------------------------------------------------------------------+----------------------------|
| Route           | web request need to get routed to controller, before controller orchestrate where the web request goes          | Routing                    |
|                 | routes need to be specified in the config/routes.rb file                                                        | routes.rb                  |
|                 | ex. get'greeter/hello' => "greeter#hello"       greeter(controller), hello(Action)                              | map                        |
|                 | Ruby's make, automate app-related tasks(database, running tests),Rake --tasks, rake --describe task_name        | Rake                       |
|                 | explains your currently defined routes(such as type this command in first_app)                                  | rake routes                |
|-----------------+-----------------------------------------------------------------------------------------------------------------+----------------------------|
| Deeper          | proper route defined, properly named view file/template, action no need there, Rails will find correct template | actions inside controller  |
|                 | view should have as little Ruby code logic as possible                                                          | view                       |
|                 | every new request is goint to create a new instance veriables                                                   | Instance Variables         |
|-----------------+-----------------------------------------------------------------------------------------------------------------+----------------------------|
| Helpers         | the methods inside helpers are available to any view                                                            | Helpers                    |
|                 | Hyperlink generator that displays the name and links to the path                                                | link_to name, path         |
|                 | link_to "Google", "http://www.google.com"                                                                       | link_to                    |
|                 | either be a regular string or a route defined in the routes.rb file with_url(full path) or _path(relative path) | Path                       |
|                 | link_to "Goodbye", greet_goodbye_path              _path is the endding                                         | Path                       |
|-----------------+-----------------------------------------------------------------------------------------------------------------+----------------------------|
| HTTPParty       | RubyGems is a sophisticated package manager for Ruby                                                            | RubyGems                   |
|                 | Simple web services implemented using HTTP(and principles of REST)                                              | Restful Web Services       |
|                 | Have a base URI, support a data exchange format(XML, JSON),Support a aset of HTTP operations(GET, POST etc.)    | Restful Web Services       |
|                 | Restful web services client, automatically parsing JSON and XML into Ruby hashes                                | HTTParty GEM               |
|                 | support for Basic http authentication, default request query parameters                                         | HTTParty GEM               |
|                 | www.programmableweb.com/apis                                                                                    | Restful APIs               |
|                 | include HTTParty module,  specify base_rui for your request,                                                    | Usage                      |
|                 | default_params(API developer key for example),                                                                  | Usage                      |
|                 | format(tell which format the data is in)                                                                        | Usage                      |
|                 | JSONView Browser Plugin(Chrome, Firefox)                                                                        | Coursera Restful APIs      |
|-----------------+-----------------------------------------------------------------------------------------------------------------+----------------------------|
| Bundler         | Bundler provides a consistent environment for Ruby projects by tracking and installing gems and versions        | Bundler                    |
|                 | gem 'rails' '4.3.2'  run bundle update                                                                          | Gemfile                    |
|                 | contains the actual gem versions                                                                                | Gemfile.lock               |
|                 | exec runs a command, providing it access to the gems in the bundle                                              | Bundle exec                |
|-----------------+-----------------------------------------------------------------------------------------------------------------+----------------------------|
| Integration     | restart the server after running bundler for changes to take effect, bundle(or bundle install)                  | update bundle              |
|                 | related to one row in the DB, controller related to all row in database                                         | Model                      |
|-----------------+-----------------------------------------------------------------------------------------------------------------+----------------------------|
| Heroku          | bundle (git add .    ,        git commit -m'message')                                                           | step of deploying          |
|                 | heroku create search-coursera-firethorn                                                                         |                            |
|                 | git push heroku master                                                                                          |                            |
|                 | heroku open                                                                                                     |                            |
|                 | git remote rm heroku                                                                                            | change Git remote          |
|                 | heroku git:remote -a apapname                                                                                   |                            |
*** Unit Testing with RSpec
** Course4 HTML,CSS, and Javascript for Web Developers
*** Environment Setup & HTML Basics
|                   | define                                       | detail                                                     |
|-------------------+----------------------------------------------+------------------------------------------------------------|
| environment       | borswer-sync                                 | browser-sync start --server --directory --file "*"         |
|-------------------+----------------------------------------------+------------------------------------------------------------|
| HTML tags         | <p>                                          | closing tag </p>                                           |
|                   | <br>                                         | Line Break, no closing tag                                 |
|                   | <hr>                                         | Horizontal Rule, no closing tag                            |
|                   | quotes                                       | single or double quotes don't matter                       |
|                   | Attribute name                               | id                                                         |
|                   | Attribute value                              | "myId"                                                     |
|                   | id                                           | not be identical, otherwise invalid HTML                   |
|                   | space                                        | no space allowed in opening&closing tag                    |
|                   | space                                        | space exist after opening tag, ex. <p xx>                  |
|-------------------+----------------------------------------------+------------------------------------------------------------|
| Structure         | begin with                                   | <!doctype html> case does not matter                       |
|                   | <html>                                       | </html>                                                    |
|                   | <head>                                       | </head>                                                    |
|                   | <meta>                                       | <meta charset="utf-8">                                     |
|                   | <title>                                      | <title>Coursera is Cool!</title> must have it              |
|                   | <body>                                       | <body> xxxx </body>                                        |
|-------------------+----------------------------------------------+------------------------------------------------------------|
| Content Models    | Block-Level Elements                         | Render to begin on a new line(default)                     |
|                   | Block-Level Elements                         | May contain inline or other block-level elements           |
|                   | Block-Level Elements                         | Roughly Flow Content(HTML5 category)                       |
|                   | Inline Elements                              | Render on the same line(default)                           |
|                   | Inline Elements                              | May only contain other inline elements                     |
|                   | Inline Elements                              | Roughly Phrasing Content(HTML5 category)                   |
|                   | <div>                                        | roughly Block-Level Elements                               |
|                   | <span>                                       | roughly Inline Elements                                    |
|-------------------+----------------------------------------------+------------------------------------------------------------|
| Heading Elements  | semantic                                     | Relating to meaning in language or logic                   |
|                   | semantic html element                        | Element that implies some meaning to the content           |
|-------------------+----------------------------------------------+------------------------------------------------------------|
| Lists             | <ul> </ul>                                   | unordered list                                             |
|                   | <li> </li>                                   | each list starts with <li> tag                             |
|-------------------+----------------------------------------------+------------------------------------------------------------|
| Entity References | <                                            | &lt;                                                       |
|                   | >                                            | &gt;                                                       |
|                   | &                                            | &amp;                                                      |
|                   | "                                            | &quot;                                                     |
|                   | copy symbol                                  | &copy;                                                     |
|                   | none breaking space                          | &nbsp;                                                     |
|-------------------+----------------------------------------------+------------------------------------------------------------|
| links             | Internal linking to other pages in the sites | <a href="xxx" title = "xxx"> same directory                |
|                   | External Linking to other web sites          | target = "_blank" open in new tag/windows                  |
|                   | linking to sections of a document            | section name does not contain # sign                       |
|                   | linking to sections of a document            | the link to section contain # sign                         |
|                   | <a> elements                                 | Flow content, Phrasing content                             |
|-------------------+----------------------------------------------+------------------------------------------------------------|
| images            | image tags                                   | <img scr=" xxx " width="400" height="" alt="xxx">          |
|                   | alt tags                                     | used by screen readers, help people with visual impairment |
|                   | comments                                     | <!--  xxxx   -->                                           |
*** Cascading Style Sheets(CSS) Basics
|                        | difine              | detail                                                   |
|------------------------+---------------------+----------------------------------------------------------|
| CSS Rules              | CSS Rule            | Selector, Declaration(Property, Value)                   |
|                        | Declaration         | seperated by :  terminated by ;                          |
|------------------------+---------------------+----------------------------------------------------------|
| Selector               | Element             | such as <p xxx >                                         |
|                        | Class               | .blue, attribute class equal to the class name           |
|                        | id                  | #name, id equal to the id value                          |
|                        | Grouping Selectors  | Separate selectors with commas                           |
|------------------------+---------------------+----------------------------------------------------------|
| Combining Selector     | Class Selector      | target every p element with attribute class equal to big |
|                        | child Selector      | article > p, every p is a direct child of article        |
|                        | descendant Selector | article p, every p inside of article                     |
|------------------------+---------------------+----------------------------------------------------------|
| Pseudo-Class Selectors | target              | not by simple combinations of regular slectors           |
|                        | target              | based on user interaction with the page                  |
|                        | way                 | selector:pseduo-class                                    |
|                        | cover               | :link, :visited, :hover, :active, :nth-child(...)        |
|                        | readable            | Simple/Readable > Complicated/Tricky                     |
*** Style Placement
|                       | define               | detail                                                                                    |
|-----------------------+----------------------+-------------------------------------------------------------------------------------------|
| Style                 | stylesheet           | <link rel="stylesheet" href="style.css">                                                  |
|                       | real-world           | styles be external to HTML page                                                           |
|                       | styles inline        | avoid, only great for quick testing                                                       |
|-----------------------+----------------------+-------------------------------------------------------------------------------------------|
| Conflict              | Cascading            | combine importance, origin, specificity and source order of applicable style declarations |
| Resolution            | origin               | Last Declaration wins, HTML process sequentially                                          |
|                       | merge                | Declarations Merge                                                                        |
|                       | inheritance          | DOM Tree                                                                                  |
|                       | specificity          | Most Specific Selector Combination Wins                                                   |
|                       | specificity          | style="..."     ID     Class, pseudo-class,attribute     # of Elements                    |
|                       | score                | [ ]             [ ]    [ ]                               [ ]                              |
|                       | !important           | overide everything                                                                        |
|-----------------------+----------------------+-------------------------------------------------------------------------------------------|
| Sytling Text          | .style               | font-family:  color:  font-style:  font-weight:  font-size:  ttext-transfrom: text-align: |
|                       | body                 | font-size:                                                                                |
|                       | 2em/0.5em;           | m is a unit of measurement, equivalent to the width of the letter(m)                      |
|-----------------------+----------------------+-------------------------------------------------------------------------------------------|
| Box Model             | conponent            | Content, padding, border, margin          width, height                                   |
|                       | body                 | margin:   padding:   background-color:                                                    |
|                       | box                  | padding:   background-color:   boarder:   margin:   width:                                |
|                       | box-sizing:          | box-sizing: border-box;  or content-box; not inherited                                    |
|                       | start-selectors      | select every element and apply these particular CSS properties to them                    |
|                       | cumulative margins   | horizontal(cumulative), vertical(larger win)                                              |
|                       | overflow:            | overflow: visible;  or hidden;   or auto;  or scroll;                                     |
|-----------------------+----------------------+-------------------------------------------------------------------------------------------|
| background            | background-color:    | blue;                                                                                     |
|                       | background-image:    | url("yaakov.png")                                                                         |
|                       | background-repeat:   | repeat-y, no-repeat;                                                                      |
|                       | background-position: | top right;                                                                                |
|                       | combine background:  | override others;  ex. url() no-repeat right center;                                       |
|-----------------------+----------------------+-------------------------------------------------------------------------------------------|
| Float                 | float element move   | browsers take them out of regular document flow                                           |
| Position Elements     | margin collapse      | when it is touching the another element margin, it collapse                               |
|                       | margin collapse      | margins of floated elements never collapse after move                                     |
|                       | margin collapse      | New element collapse and hide, surround the last section element                          |
|                       | clear                | resume the regular document flow   ex. clear: left;                                       |
|                       | clear                | left, right, both                                                                         |
|-----------------------+----------------------+-------------------------------------------------------------------------------------------|
| Relative and Absolute | Static Positioning   | Normal document flow, default setting for all elements, except html                       |
| Element Positioning   | Static Positioning   | position property is set to static, the offsets are just ignored                          |
|                       | Relative Positioning | Element is positioned relative to its position in normal document flow                    |
|                       | Relative Positioning | positioning CSS offset properties: top, bottom, left and right                            |
|                       | Relative Positioning | Element is NOT taken out of normal document flow                                          |
|                       | Absolute Positioning | remain in the place where it was without any other offsets                                |
|                       | Absolute Positioning | position: relative;                                                                       |
*** Responsive Design
|                   | define                | detail                                                                                                 |                   |
|-------------------+-----------------------+--------------------------------------------------------------------------------------------------------+-------------------|
| Media Queries     | Syntax                | @media(max-width: 767px){...}                                                                          |                   |
|                   | Syntax                | Media Feature(resolves to true or false), if TRUE, styles within curly braces apply                    |                   |
|                   | max-width: 800px      | {...}                                                                                                  |                   |
|                   | min-width: 800px      | {...}                                                                                                  |                   |
|                   | orientation: portrait | {...}                                                                                                  |                   |
|                   | screen                | {...}                                                                                                  |                   |
|                   | print                 | {...}                                                                                                  |                   |
|                   | within a range        | @media(min-width: 768px) and (max-width: 991px){...}                                                   |                   |
|                   | Comma = OR            | @media(max-width: 767px) , (min-width: 992px){...}                                                     |                   |
|-------------------+-----------------------+--------------------------------------------------------------------------------------------------------+-------------------|
| Responsive Design | Responsive Design     | fluid, proportion-based grids, flexible images, CSS3 media queries                                     | ***study again*** |
|                   | Layout                | 12-Column Grid Responsive Layout                                                                       |                   |
|                   | viewport              | content= "width=device-width, initial-scale=1"                                                         |                   |
|-------------------+-----------------------+--------------------------------------------------------------------------------------------------------+-------------------|
| Twitter Bootstrap | history               | CSS framwork made by engineer in Twitter                                                               |                   |
|                   | define                | the most popular HTML, CSS and JS framework for developing responsive, mobile first project            |                   |
|                   | define                | pre-defines lots of CSS classes                                                                        |                   |
|                   | define                | JavaScript framework based on J Query APIs and plugin acrhitecture                                     |                   |
|                   | Mobile First          | PLAN mobile from the start, CSS Framework is mobile ready                                              |                   |
|                   | complaint             | too big & too bloated                                                                                  |                   |
|                   | minified version      | spaces taken out, certain veriables are renamed                                                        |                   |
|-------------------+-----------------------+--------------------------------------------------------------------------------------------------------+-------------------|
| Grid System       | container             | <div class="container"> must be inside container(or container-fluid)                                   |                   |
|                   | container-fuild       | stretches layout the full width of the browser and provides consistent padding around grid and content |                   |
|                   | container-fuild       | other content go into the container, not just the grid                                                 |                   |
|                   | container             | has fixed width based on the width of the browser                                                      |                   |
|                   | row                   | <div class = "row">                                                                                    |                   |
|                   | SIZE identifier       | identifies at breakpoint specified column spans ignored and elements collapse                          |                   |
*** Design Overview
browser-sync start --server --directory --file "**/*"
|   | define       | detail                                            |
|---+--------------+---------------------------------------------------|
|   | Balsamiq     | great interfaces, software, website, mobiles apps |
|   | ground rules |                                                   |
|   | 3000         | localhost: browser                                |
|   | 3001         | localhost: UI                                     |
|   | vw           | 1vw = 1% of viewport width, font-size: 5vw        |
|   |              |                                                   |
* liaoxuefeng Git course
|                    | define                    | detail                                                          |
|--------------------+---------------------------+-----------------------------------------------------------------|
| git basic          | git init                  | initialized empty Git repository, (.git ,gitignore)             |
|                    | git status                | commit status, modified status, untracked files                 |
|                    | git diff                  | question: which location of files which is compared             |
|                    | git add                   | add stuff from working directory to stage                       |
|                    | git commit                | commit stuff from stage to master                               |
|--------------------+---------------------------+-----------------------------------------------------------------|
| edition control    | git log                   | showing log from the latest to the earliest                     |
|                    | git log --pretty=oneline  | showing commit id                                               |
|                    | git reset HEAD^           | HEAD^ is the last edition                                       |
|                    | git reset --hard commitid | recover to future edition(commitid)                             |
|                    | git reflog                | record every command                                            |
|                    | git checkout --file       | recover latest edition before add OR commit                     |
|                    | git checkout              | replace the edition from working directory OR Repository        |
|                    | git rm                    | delete file in Repository(command in need: git commit)          |
|--------------------+---------------------------+-----------------------------------------------------------------|
| remoted Repository | create on GitHub          | click "Create a new repo" on top right corner                   |
|                    | local Repository          | git remote add origin git@github.com:githubaccount/filename.git |
|                    | origin                    | remote remoted Repository name                                  |
|                    | git push origin master    | push master to remote Repository                                |
|                    | git push -u origin master | -u push & connect local master with origin master               |
|                    | git clone                 | clone Repository from github                                    |
|--------------------+---------------------------+-----------------------------------------------------------------|
| branch management  | git branch                | check branch                                                    |
|                    | git branch <name>         | create branch                                                   |
|                    | git checkout <name>       | change branch                                                   |
|                    | git checkout -b <name>    | create and change branch                                        |
|                    | git merge <name>          | merge branch<name> to current branch                            |
|                    | git branch -d <name>      | delete branch                                                   |
|                    | git log --graph           | check graph of merging status                                   |
|                    | --pretty=oneline          | make it pretty      tag:guess                                   |
|                    | --abbrev-commit           | make it pretty      tag:guess                                   |
* Spacemacs Rock
|          | define                    | detail                                         |
|----------+---------------------------+------------------------------------------------|
|          | setq                      | sets local value in crrent buffer              |
|          | setq-default              | set the global default value                   |
|          | variable not buffer-local | setq = setq-default                            |
|          | C-h-f                     | check defination                               |
|          | require('name)            | input function('name)                          |
|          | open the mode             | 1 = t                                          |
|          | eval-buffer               | compile the whole buffer                       |
|          | add-hook 'name            | open the file, it will call 'name              |
|----------+---------------------------+------------------------------------------------|
| org mode | tags "name"               | shows list of tag "name", include everything   |
|          | tags-todo "name"          | shows list of tag "name", when tags has status |
|          | tags "-name"              | -name will show everything. Question????       |
|          | org-agenda.el             | defcustom org-agenda-start-on-weekday 1        |
|          |                           |                                                |
* snowboards
|              |                    |                                                                                      |
|--------------+--------------------+--------------------------------------------------------------------------------------|
|              | base               | back of the board                                                                    |
|              | edges              | entire of the board                                                                  |
|              | toe edge           | front of the board                                                                   |
|              | heel edge          | back of the board                                                                    |
|              | binding            | nice and tight, no space between boot and binding                                    |
|              | straight running   |                                                                                      |
|--------------+--------------------+--------------------------------------------------------------------------------------|
| body station | stand              | stand straight up, sit(like in chair)                                                |
|              |                    | leg(nice and bend), back(straight), head(up,look where to go)                        |
|              |                    | only up and down motions                                                             |
|--------------+--------------------+--------------------------------------------------------------------------------------|
| sliding      |                    | I am right leg                                                                       |
|              |                    | put the foot behind the board, little pushes                                         |
|              |                    | put the foot front the board, little pushes                                          |
|--------------+--------------------+--------------------------------------------------------------------------------------|
| size sliping | heel edge(forward) | break(lift your toes, sitting down) accerate(drop toes)---like motocycle             |
|              | toe edge(backward) | break(dig knees to snow walls), accerate(drop heels, not to ground)                  |
|              | key                | lift&drop toes nice and slow, nice and common relax                                  |
|--------------+--------------------+--------------------------------------------------------------------------------------|
| padling...   |                    | forward(side to side), backward(side to side)                                        |
| forward      | Going right        | pressure on right leg, look&point right side                                         |
|              | center             | come back to center, equal weight on both foot                                       |
|              | Going left         | drop a little weight on left leg, look&point left side                               |
|              | key                | very small movement, stay on control                                                 |
| backward     | Going left         | pie a little left(no overlook), down arm, a little weight on left leg                |
|              | center             | stop(stright up), even up body                                                       |
|              | Going right        | same with left                                                                       |
|--------------+--------------------+--------------------------------------------------------------------------------------|
| Turn         | start with         | slide forward firstly on heel edge, one turn at a time                               |
|              | forward            | transfer weight on front foot, roate&up body,couse the board to go straight          |
|              | backward           | little pressure on front foot(keeping), turn up body, transfer to heel edge(forward) |
|              | key                | transfer to toe edge(backward), nice and smoothly                                    |
|              | false              | transfer the weight back, can not finish the turn,                                   |
|              | turn way           | slipe down, weight on front foot, make turn                                          |
|--------------+--------------------+--------------------------------------------------------------------------------------|
|              |                    |                                                                                      |


